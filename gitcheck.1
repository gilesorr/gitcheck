.\" Manpage for gitcheck.
.\" Useful: "zless /usr/share/man/man1/top.1.gz" and
.\" http://www.cyberciti.biz/faq/linux-unix-creating-a-manpage/

.\" The date and version appear at the end in normal presentation,
.\" the rest appears at the top of the man page.

.\" String register, accessed with \*(EN (Executable Name)
.ds EN \fBgitcheck\fR
.ds En gitcheck
.\" Stole the EN / En difference from the top man page, but what's the
.\" practical difference?

.TH man 1 "31 January 2016" "0.3" "\*(En man page"
.\" ----------------------------------------------------------------------
.SH NAME
.\" ----------------------------------------------------------------------
\*(EN \- check the status of local git repositories
.\" ----------------------------------------------------------------------
.SH SYNOPSIS
.\" ----------------------------------------------------------------------
\*(En [-rnav] [-c PATH]
.\" ----------------------------------------------------------------------
.SH DESCRIPTION
.\" ----------------------------------------------------------------------
\*(En is a script that checks the status of local git repositories for modifications.  With the \-r option it can check each repository's relation to its remote (singular - it's not smart enough to know about multiple remotes).
.\" ----------------------------------------------------------------------
.SH OPTIONS
.\" ----------------------------------------------------------------------
.TP
\fB\-r\fR, \fB\-\-remote\fR
Check the status of each repository with respect to its remote, if it has one (default is not to check remotes)
.TP
\fB\-n\fR, \fB\-\-nocolour\fR
Output will contain no colours and no escape codes - better for pipes (default is to colourize output)
.TP
\fB\-a\fR, \fB\-\-showall\fR
Show all repositories, including ones that are clean and up to date (default is to only repositories with changes)
.TP
\fB\-c\fR, \fB\-\-config PATH\fR
Generate a new config file to standard out by looking for repositories on PATH, where PATH is a standard colon-separated Unix Path variable, ex.:

    \*(En -c ~ > ~/.\*(En.conf

    Or

    \*(En -c '/opt/:/home/linux' > tmp.txt

This can be very slow depending on the size of the directory tree it's asked to crawl.
.TP
\fB\-v\fR, \fB\-\-version\fR
Show the version number of the program
.\" ----------------------------------------------------------------------
.SH EXIT STATUS
.\" ----------------------------------------------------------------------
.TP
0
if OK
.TP
1
there is no configuration file or the config is malformed (the program will explain what to do)
.TP
2
if the configuration file is malformed
.TP
4
if "Fetch" and "Pull" URIs don't match (this program cannot yet deal with that circumstance)
.TP
8
User interrupt (usually Ctrl-C)
.TP
16
When trying to generate a config file, no valid directories were found in
the user-provided path
.\" ----------------------------------------------------------------------
.SH FILES
.\" ----------------------------------------------------------------------
~/.\*(En.conf
.\" ----------------------------------------------------------------------
.SH SEE ALSO
.\" ----------------------------------------------------------------------
git(1)
.\" ----------------------------------------------------------------------
.SH BUGS
.\" ----------------------------------------------------------------------
Regenerating the config file will wipe all comments from the config.  This is a limitation of Python's configparser().  The recommended work-around is not to directly overwrite your current config, but to write the new config to a separate file and edit new repositories into the old config.
.\" ----------------------------------------------------------------------
.SH REPORTING BUGS
.\" ----------------------------------------------------------------------
Please report bugs to the author.  Better yet, send a fix or pull request.
.\" ----------------------------------------------------------------------
.SH AUTHOR
.\" ----------------------------------------------------------------------
Giles Orr (gilesorr@gmail.com)

